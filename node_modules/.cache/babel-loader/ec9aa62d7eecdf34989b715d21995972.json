{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\portfolio-projects\\\\e-commerce-practice\\\\frontend\\\\src\\\\components\\\\screens\\\\UserEditScreen.jsx\";\n\n/* eslint-disable camelcase */\nimport React, { useState, useEffect } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../Message';\nimport Loader from '../Loader';\nimport FormContainer from '../FormContainer';\nimport { getUserToUpdate } from '../../actions/userActions';\n\nconst UserEditScreen = () => {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const userToBeUpdated = useSelector(state => state.userUpdate.userToUpdate);\n  const {\n    id: user_id\n  } = useParams();\n  const [email, setEmail] = useState('');\n  const [firstname, setFirstname] = useState('');\n  const [lastname, setLastname] = useState('');\n  const [username, setUsername] = useState('');\n  const [message, setMessage] = useState(null);\n  useEffect(() => {\n    dispatch(getUserToUpdate(user_id));\n  }, [dispatch, user_id]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Go Back\"));\n};\n\nexport default UserEditScreen;","map":{"version":3,"sources":["D:/Development/portfolio-projects/e-commerce-practice/frontend/src/components/screens/UserEditScreen.jsx"],"names":["React","useState","useEffect","Link","useLocation","useParams","Form","Button","Row","Col","useDispatch","useSelector","Message","Loader","FormContainer","getUserToUpdate","UserEditScreen","location","dispatch","userToBeUpdated","state","userUpdate","userToUpdate","id","user_id","email","setEmail","firstname","setFirstname","lastname","setLastname","username","setUsername","message","setMessage"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,SAA5B,QAA6C,kBAA7C;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,EAA4BC,GAA5B,QAAuC,iBAAvC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,SAASC,eAAT,QAAgC,2BAAhC;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,eAAe,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBC,YAA7B,CAAnC;AAEA,QAAM;AAAEC,IAAAA,EAAE,EAAEC;AAAN,MAAkBnB,SAAS,EAAjC;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC0B,SAAD,EAAYC,YAAZ,IAA4B3B,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC4B,QAAD,EAAWC,WAAX,IAA0B7B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC8B,QAAD,EAAWC,WAAX,IAA0B/B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgC,OAAD,EAAUC,UAAV,IAAwBjC,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,QAAQ,CAACH,eAAe,CAACS,OAAD,CAAhB,CAAR;AACD,GAFQ,EAEN,CAACN,QAAD,EAAWM,OAAX,CAFM,CAAT;AAGA,sBACE,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF;AAKD,CApBD;;AAsBA,eAAeR,cAAf","sourcesContent":["/* eslint-disable camelcase */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, useLocation, useParams } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../Message';\r\nimport Loader from '../Loader';\r\nimport FormContainer from '../FormContainer';\r\nimport { getUserToUpdate } from '../../actions/userActions';\r\n\r\nconst UserEditScreen = () => {\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const userToBeUpdated = useSelector((state) => state.userUpdate.userToUpdate);\r\n\r\n  const { id: user_id } = useParams();\r\n  const [email, setEmail] = useState('');\r\n  const [firstname, setFirstname] = useState('');\r\n  const [lastname, setLastname] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserToUpdate(user_id));\r\n  }, [dispatch, user_id]);\r\n  return (\r\n    <>\r\n      <Button>Go Back</Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n"]},"metadata":{},"sourceType":"module"}