{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\portfolio-projects\\\\e-commerce-practice\\\\frontend\\\\src\\\\components\\\\screens\\\\OrderListScreen.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Table } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FcCheckmark } from 'react-icons/fc';\nimport { fetchDistinctOrderId, fetchOneOrder } from '../../actions/orderActions';\n\nconst OrderListScreen = () => {\n  const history = useHistory;\n  const dispatch = useDispatch(); // STATES\n\n  const [orderList, setOrderList] = useState([]); // Global state\n\n  const {\n    distinctIds\n  } = useSelector(state => state.orderFetchDistinct);\n  const {\n    order\n  } = useSelector(state => state.orderFetchOne);\n  useEffect(() => {\n    // TODO ~~~ I got all the distinct IDs\n    dispatch(fetchDistinctOrderId()); // eslint-disable-next-line prefer-const\n\n    let store = distinctIds.map(idObj => {\n      dispatch(fetchOneOrder(idObj.order_id));\n      return order;\n    });\n  }, [dispatch]);\n  useEffect(() => {\n    console.log(order);\n    setOrderList(prev => [...prev, order]);\n  }, [order]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Orders\"), /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    responsive: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"USER\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"DATE\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"TOTAL\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"PAID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"DELIVERED\"), /*#__PURE__*/React.createElement(\"th\", {\n    colSpan: \"2\",\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"ACTIONS\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, orderList.map(order => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, order.order_id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, order.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, order.created_at), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, order.subtotal), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, order.is_paid ? FcCheckmark : x), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, order.is_delivered))))));\n};\n\nexport default OrderListScreen;","map":{"version":3,"sources":["D:/Development/portfolio-projects/e-commerce-practice/frontend/src/components/screens/OrderListScreen.jsx"],"names":["React","useEffect","useState","useHistory","Table","useDispatch","useSelector","FcCheckmark","fetchDistinctOrderId","fetchOneOrder","OrderListScreen","history","dispatch","orderList","setOrderList","distinctIds","state","orderFetchDistinct","order","orderFetchOne","store","map","idObj","order_id","console","log","prev","name","created_at","subtotal","is_paid","x","is_delivered"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Table } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { FcCheckmark } from 'react-icons/fc';\r\n\r\nimport {\r\n  fetchDistinctOrderId,\r\n  fetchOneOrder,\r\n} from '../../actions/orderActions';\r\n\r\nconst OrderListScreen = () => {\r\n  const history = useHistory;\r\n  const dispatch = useDispatch();\r\n\r\n  // STATES\r\n  const [orderList, setOrderList] = useState([]);\r\n\r\n  // Global state\r\n  const { distinctIds } = useSelector((state) => state.orderFetchDistinct);\r\n  const { order } = useSelector((state) => state.orderFetchOne);\r\n\r\n  useEffect(() => {\r\n    // TODO ~~~ I got all the distinct IDs\r\n    dispatch(fetchDistinctOrderId());\r\n    // eslint-disable-next-line prefer-const\r\n    let store = distinctIds.map((idObj) => {\r\n      dispatch(fetchOneOrder(idObj.order_id));\r\n      return order;\r\n    });\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    console.log(order);\r\n    setOrderList((prev) => [...prev, order]);\r\n  }, [order]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Orders</h1>\r\n      <Table striped bordered hover responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>USER</th>\r\n            <th>DATE</th>\r\n            <th>TOTAL</th>\r\n            <th>PAID</th>\r\n            <th>DELIVERED</th>\r\n            <th colSpan=\"2\" className=\"text-center\">\r\n              ACTIONS\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {orderList.map((order) => (\r\n            <tr>\r\n              <td>{order.order_id}</td>\r\n              <td>{order.name}</td>\r\n              <td>{order.created_at}</td>\r\n              <td>{order.subtotal}</td>\r\n              <td>{order.is_paid ? FcCheckmark : x}</td>\r\n              <td>{order.is_delivered}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderListScreen;\r\n"]},"metadata":{},"sourceType":"module"}