{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\portfolio-projects\\\\e-commerce-practice\\\\frontend\\\\src\\\\components\\\\screens\\\\OrderListScreen.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Table, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FcCheckmark, FcHighPriority } from 'react-icons/fc';\nimport { fetchDistinctOrderId, fetchOneOrder, resetAllOrderList } from '../../actions/orderActions';\nimport Message from '../Message';\n\nconst OrderListScreen = () => {\n  const history = useHistory;\n  const dispatch = useDispatch(); // STATES\n\n  const [orderList, setOrderList] = useState([]); // Global state\n\n  const {\n    distinctIds\n  } = useSelector(state => state.orderFetchDistinct);\n  const {\n    allOrderList\n  } = useSelector(state => state.orderFetchOne);\n  useEffect(() => {\n    dispatch(fetchDistinctOrderId());\n\n    if (distinctIds.length !== 0) {\n      distinctIds.forEach(idObj => {\n        dispatch(fetchOneOrder(idObj.order_id));\n      });\n    }\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Orders\"), allOrderList ? /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    responsive: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, \"USER\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, \"DATE\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, \"TOTAL\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, \"PAID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, \"DELIVERED\"), /*#__PURE__*/React.createElement(\"th\", {\n    colSpan: \"2\",\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, \"ACTIONS\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, allOrderList.map(orderItem => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, orderItem.order_id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, orderItem.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, orderItem.created_at), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, orderItem.subtotal), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, orderItem.is_paid ? /*#__PURE__*/React.createElement(FcCheckmark, {\n    size: \"2em\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(FcHighPriority, {\n    size: \"2em\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, orderItem.is_delivered ? /*#__PURE__*/React.createElement(FcCheckmark, {\n    size: \"2em\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(FcHighPriority, {\n    size: \"2em\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, \"Details\")))))) : /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"'No Orders Found!'\"));\n};\n\nexport default OrderListScreen;","map":{"version":3,"sources":["D:/Development/portfolio-projects/e-commerce-practice/frontend/src/components/screens/OrderListScreen.jsx"],"names":["React","useEffect","useState","useHistory","Table","Button","useDispatch","useSelector","FcCheckmark","FcHighPriority","fetchDistinctOrderId","fetchOneOrder","resetAllOrderList","Message","OrderListScreen","history","dispatch","orderList","setOrderList","distinctIds","state","orderFetchDistinct","allOrderList","orderFetchOne","length","forEach","idObj","order_id","map","orderItem","name","created_at","subtotal","is_paid","is_delivered"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,gBAA5C;AAEA,SACEC,oBADF,EAEEC,aAFF,EAGEC,iBAHF,QAIO,4BAJP;AAKA,OAAOC,OAAP,MAAoB,YAApB;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC5B,QAAMC,OAAO,GAAGZ,UAAhB;AACA,QAAMa,QAAQ,GAAGV,WAAW,EAA5B,CAF4B,CAI5B;;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,EAAD,CAA1C,CAL4B,CAO5B;;AACA,QAAM;AAAEiB,IAAAA;AAAF,MAAkBZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACC,kBAAlB,CAAnC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAmBf,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACG,aAAlB,CAApC;AAEAtB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,QAAQ,CAACN,oBAAoB,EAArB,CAAR;;AAEA,QAAIS,WAAW,CAACK,MAAZ,KAAuB,CAA3B,EAA8B;AAC5BL,MAAAA,WAAW,CAACM,OAAZ,CAAqBC,KAAD,IAAW;AAC7BV,QAAAA,QAAQ,CAACL,aAAa,CAACe,KAAK,CAACC,QAAP,CAAd,CAAR;AACD,OAFD;AAGD;AACF,GARQ,EAQN,CAACX,QAAD,CARM,CAAT;AAUA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGM,YAAY,gBACX,oBAAC,KAAD;AAAO,IAAA,OAAO,MAAd;AAAe,IAAA,QAAQ,MAAvB;AAAwB,IAAA,KAAK,MAA7B;AAA8B,IAAA,UAAU,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,eAOE;AAAI,IAAA,OAAO,EAAC,GAAZ;AAAgB,IAAA,SAAS,EAAC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF,CADF,CADF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,YAAY,CAACM,GAAb,CAAkBC,SAAD,iBAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,SAAS,CAACF,QAAf,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,SAAS,CAACC,IAAf,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,SAAS,CAACE,UAAf,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,SAAS,CAACG,QAAf,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,SAAS,CAACI,OAAV,gBACC,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAGC,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CALF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,SAAS,CAACK,YAAV,gBACC,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAGC,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAZF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAnBF,CADD,CADH,CAdF,CADW,gBA4CX,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BA9CJ,CADF;AAmDD,CAxED;;AA0EA,eAAepB,eAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { FcCheckmark, FcHighPriority } from 'react-icons/fc';\r\n\r\nimport {\r\n  fetchDistinctOrderId,\r\n  fetchOneOrder,\r\n  resetAllOrderList,\r\n} from '../../actions/orderActions';\r\nimport Message from '../Message';\r\n\r\nconst OrderListScreen = () => {\r\n  const history = useHistory;\r\n  const dispatch = useDispatch();\r\n\r\n  // STATES\r\n  const [orderList, setOrderList] = useState([]);\r\n\r\n  // Global state\r\n  const { distinctIds } = useSelector((state) => state.orderFetchDistinct);\r\n  const { allOrderList } = useSelector((state) => state.orderFetchOne);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchDistinctOrderId());\r\n\r\n    if (distinctIds.length !== 0) {\r\n      distinctIds.forEach((idObj) => {\r\n        dispatch(fetchOneOrder(idObj.order_id));\r\n      });\r\n    }\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Orders</h1>\r\n      {allOrderList ? (\r\n        <Table striped bordered hover responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th colSpan=\"2\" className=\"text-center\">\r\n                ACTIONS\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {allOrderList.map((orderItem) => (\r\n              <tr>\r\n                <td>{orderItem.order_id}</td>\r\n                <td>{orderItem.name}</td>\r\n                <td>{orderItem.created_at}</td>\r\n                <td>{orderItem.subtotal}</td>\r\n                <td>\r\n                  {orderItem.is_paid ? (\r\n                    <FcCheckmark size=\"2em\" />\r\n                  ) : (\r\n                    <FcHighPriority size=\"2em\" />\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {orderItem.is_delivered ? (\r\n                    <FcCheckmark size=\"2em\" />\r\n                  ) : (\r\n                    <FcHighPriority size=\"2em\" />\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <Button>Details</Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      ) : (\r\n        <Message variant=\"danger\">'No Orders Found!'</Message>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderListScreen;\r\n"]},"metadata":{},"sourceType":"module"}