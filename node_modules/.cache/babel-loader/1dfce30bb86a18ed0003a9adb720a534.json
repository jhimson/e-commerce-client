{"ast":null,"code":"import Axios from 'axios';\nimport { cartConstants } from '../constants/cartConstants';\nconst {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_RESET_ITEMS\n} = cartConstants;\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await Axios.get(`http://localhost:5000/api/v1/products/${id}`);\n    dispatch({\n      type: CART_ADD_ITEM,\n      payload: {\n        product: data.product_id,\n        image: data.image,\n        name: data.name,\n        price: data.price,\n        in_stock: data.in_stock,\n        qty\n      }\n    });\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const removeFromCart = id => async (dispatch, getState) => {\n  console.log(id);\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\nexport const saveShippingAddress = data => async dispatch => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data\n  });\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\nexport const savePaymentMethod = data => async dispatch => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data\n  });\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\n};\nexport const resetCartItems = () => async dispatch => {\n  dispatch({\n    type: CART_RESET_ITEMS,\n    payload: {}\n  });\n  localStorage.removeItem('cartItems');\n};","map":{"version":3,"sources":["D:/Development/portfolio-projects/e-commerce-practice/frontend/src/actions/cartActions.js"],"names":["Axios","cartConstants","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_RESET_ITEMS","addToCart","id","qty","dispatch","getState","data","get","type","payload","product","product_id","image","name","price","in_stock","localStorage","setItem","JSON","stringify","cart","cartItems","error","console","log","removeFromCart","saveShippingAddress","savePaymentMethod","resetCartItems","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,4BAA9B;AAEA,MAAM;AACJC,EAAAA,aADI;AAEJC,EAAAA,gBAFI;AAGJC,EAAAA,0BAHI;AAIJC,EAAAA,wBAJI;AAKJC,EAAAA;AALI,IAMFL,aANJ;AAQA,OAAO,MAAMM,SAAS,GAAG,CAACC,EAAD,EAAKC,GAAL,KAAa,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAClE,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACa,GAAN,CACpB,yCAAwCL,EAAG,EADvB,CAAvB;AAIAE,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEZ,aADC;AAEPa,MAAAA,OAAO,EAAE;AACPC,QAAAA,OAAO,EAAEJ,IAAI,CAACK,UADP;AAEPC,QAAAA,KAAK,EAAEN,IAAI,CAACM,KAFL;AAGPC,QAAAA,IAAI,EAAEP,IAAI,CAACO,IAHJ;AAIPC,QAAAA,KAAK,EAAER,IAAI,CAACQ,KAJL;AAKPC,QAAAA,QAAQ,EAAET,IAAI,CAACS,QALR;AAMPZ,QAAAA;AANO;AAFF,KAAD,CAAR;AAYAa,IAAAA,YAAY,CAACC,OAAb,CACE,WADF,EAEEC,IAAI,CAACC,SAAL,CAAed,QAAQ,GAAGe,IAAX,CAAgBC,SAA/B,CAFF;AAID,GArBD,CAqBE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAzBM;AA2BP,OAAO,MAAMG,cAAc,GAAIvB,EAAD,IAAQ,OAAOE,QAAP,EAAiBC,QAAjB,KAA8B;AAClEkB,EAAAA,OAAO,CAACC,GAAR,CAAYtB,EAAZ;AACAE,EAAAA,QAAQ,CAAC;AACPI,IAAAA,IAAI,EAAEX,gBADC;AAEPY,IAAAA,OAAO,EAAEP;AAFF,GAAD,CAAR;AAKAc,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAed,QAAQ,GAAGe,IAAX,CAAgBC,SAA/B,CAAlC;AACD,CARM;AAUP,OAAO,MAAMK,mBAAmB,GAAIpB,IAAD,IAAU,MAAOF,QAAP,IAAoB;AAC/DA,EAAAA,QAAQ,CAAC;AACPI,IAAAA,IAAI,EAAEV,0BADC;AAEPW,IAAAA,OAAO,EAAEH;AAFF,GAAD,CAAR;AAKAU,EAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCC,IAAI,CAACC,SAAL,CAAeb,IAAf,CAAxC;AACD,CAPM;AASP,OAAO,MAAMqB,iBAAiB,GAAIrB,IAAD,IAAU,MAAOF,QAAP,IAAoB;AAC7DA,EAAAA,QAAQ,CAAC;AACPI,IAAAA,IAAI,EAAET,wBADC;AAEPU,IAAAA,OAAO,EAAEH;AAFF,GAAD,CAAR;AAKAU,EAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCC,IAAI,CAACC,SAAL,CAAeb,IAAf,CAAtC;AACD,CAPM;AASP,OAAO,MAAMsB,cAAc,GAAG,MAAM,MAAOxB,QAAP,IAAoB;AACtDA,EAAAA,QAAQ,CAAC;AACPI,IAAAA,IAAI,EAAER,gBADC;AAEPS,IAAAA,OAAO,EAAE;AAFF,GAAD,CAAR;AAKAO,EAAAA,YAAY,CAACa,UAAb,CAAwB,WAAxB;AACD,CAPM","sourcesContent":["import Axios from 'axios';\r\nimport { cartConstants } from '../constants/cartConstants';\r\n\r\nconst {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_RESET_ITEMS,\r\n} = cartConstants;\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  try {\r\n    const { data } = await Axios.get(\r\n      `http://localhost:5000/api/v1/products/${id}`\r\n    );\r\n\r\n    dispatch({\r\n      type: CART_ADD_ITEM,\r\n      payload: {\r\n        product: data.product_id,\r\n        image: data.image,\r\n        name: data.name,\r\n        price: data.price,\r\n        in_stock: data.in_stock,\r\n        qty,\r\n      },\r\n    });\r\n\r\n    localStorage.setItem(\r\n      'cartItems',\r\n      JSON.stringify(getState().cart.cartItems)\r\n    );\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const removeFromCart = (id) => async (dispatch, getState) => {\r\n  console.log(id);\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  });\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const saveShippingAddress = (data) => async (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  });\r\n\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = (data) => async (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  });\r\n\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\r\n};\r\n\r\nexport const resetCartItems = () => async (dispatch) => {\r\n  dispatch({\r\n    type: CART_RESET_ITEMS,\r\n    payload: {},\r\n  });\r\n\r\n  localStorage.removeItem('cartItems');\r\n};\r\n"]},"metadata":{},"sourceType":"module"}