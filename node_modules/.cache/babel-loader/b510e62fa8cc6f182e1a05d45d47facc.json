{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nconst reducer = combineReducers({});\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["D:/Development/portfolio-projects/e-commerce-practice/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","reducer","initialState","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AAGA,MAAMC,OAAO,GAAGJ,eAAe,CAAC,EAAD,CAA/B;AAEA,MAAMK,YAAY,GAAG,EAArB;AAEA,MAAMC,UAAU,GAAG,CAACJ,KAAD,CAAnB;AAEA,MAAMK,KAAK,GAAGR,WAAW,CAACK,OAAD,EAAUC,YAAV,EAAuBF,mBAAmB,CAACF,eAAe,CAAC,GAAGK,UAAJ,CAAhB,CAA1C,CAAzB;AAGA,eAAeC,KAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\n\r\nconst reducer = combineReducers({});\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}