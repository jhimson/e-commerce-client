{"ast":null,"code":"/* eslint-disable camelcase */\nimport Axios from 'axios';\nimport { productConstants } from '../constants/productConstants';\nconst {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_DELETE_RESET,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL\n} = productConstants;\nexport const listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await Axios.get('http://localhost:5000/api/v1/products');\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('productList', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.response && error.response.data.error.message ? error.response.data.error.message : error.message\n    });\n  }\n};\nexport const listProductDetails = product_id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const response = await Axios.get(`http://localhost:5000/api/v1/products/${product_id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.error.message ? error.response.data.error.message : error.message\n    });\n  }\n};\nexport const deleteProduct = product_id => async (dispatch, getState) => {\n  const {\n    token\n  } = getState().userLogin.userInfo;\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  };\n\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST\n    });\n    await Axios.delete(`http://localhost:5000/api/v1/products/${product_id}`, config);\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS\n    });\n    dispatch({\n      type: PRODUCT_DELETE_RESET\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.response && error.response.data.error.message ? error.response.data.error.message : error.message\n    });\n  }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n  const {\n    token\n  } = getState().userLogin.userInfo;\n  console.log('TOKIN', token);\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  };\n\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST\n    });\n    const {\n      data\n    } = await Axios.post(`http://localhost:5000/api/v1/products`, config);\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data.rows\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: error.response && error.response.data.error.message ? error.response.data.error.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["D:/Development/portfolio-projects/e-commerce-practice/frontend/src/actions/productActions.js"],"names":["Axios","productConstants","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_DELETE_RESET","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","listProducts","dispatch","type","data","get","payload","localStorage","setItem","JSON","stringify","error","response","message","listProductDetails","product_id","deleteProduct","getState","token","userLogin","userInfo","config","headers","Authorization","delete","createProduct","console","log","post","rows"],"mappings":"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","sourcesContent":["/* eslint-disable camelcase */\r\nimport Axios from 'axios';\r\nimport { productConstants } from '../constants/productConstants';\r\n\r\nconst {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_DELETE_RESET,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n} = productConstants;\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n    const { data } = await Axios.get('http://localhost:5000/api/v1/products');\r\n\r\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n    localStorage.setItem('productList', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.error.message\r\n          ? error.response.data.error.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProductDetails = (product_id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n    const response = await Axios.get(\r\n      `http://localhost:5000/api/v1/products/${product_id}`\r\n    );\r\n\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: response.data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.error.message\r\n          ? error.response.data.error.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (product_id) => async (dispatch, getState) => {\r\n  const { token } = getState().userLogin.userInfo;\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  try {\r\n    dispatch({ type: PRODUCT_DELETE_REQUEST });\r\n\r\n    await Axios.delete(\r\n      `http://localhost:5000/api/v1/products/${product_id}`,\r\n      config\r\n    );\r\n\r\n    dispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n    dispatch({ type: PRODUCT_DELETE_RESET });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.error.message\r\n          ? error.response.data.error.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  const { token } = getState().userLogin.userInfo;\r\n  console.log('TOKIN', token);\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  try {\r\n    dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n    const { data } = await Axios.post(\r\n      `http://localhost:5000/api/v1/products`,\r\n      config\r\n    );\r\n\r\n    dispatch({ type: PRODUCT_CREATE_SUCCESS, payload: data.rows });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.error.message\r\n          ? error.response.data.error.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}