{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\portfolio-projects\\\\e-commerce-practice\\\\frontend\\\\src\\\\components\\\\screens\\\\ProductEditScreen.jsx\";\n\n/* eslint-disable no-lonely-if */\n\n/* eslint-disable camelcase */\nimport Axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport ReactS3 from 'react-s3'; // import S3FileUpload from 'react-s3';\n// // Optional Import\n// import { uploadFile } from 'react-s3';\n\nimport { listProductDetails, updateProduct, resetUpdateProduct } from '../../actions/productActions';\nimport FormContainer from '../FormContainer';\nimport Loader from '../Loader';\nimport Message from '../Message';\nconst configAWS = {\n  bucketName: 'e-commerce-image-upload',\n  dirName: 'photos'\n  /* optional */\n  ,\n  region: 'us-east-1',\n  accessKeyId: 'AKIA4MCEW3SI75T7QRVT',\n  secretAccessKey: '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'\n};\n\nconst ProductEditScreen = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const {\n    id: productId\n  } = useParams();\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState('');\n  const [imageTest, setImageTest] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [in_stock, setIn_stock] = useState(0);\n  const [description, setDescription] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading: loadingProduct,\n    error: errorProduct,\n    product\n  } = productDetails;\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n    product: updatedProduct\n  } = productUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch(resetUpdateProduct());\n      history.push('/admin/productsList');\n    } else {\n      if (!product || product.product_id !== productId) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setIn_stock(product.in_stock);\n        setDescription(product.description);\n      }\n    }\n  }, [dispatch, history, productId, product, successUpdate]);\n\n  const testUploadFileHandler = e => {\n    e.preventDefault();\n    console.log(e.target.files[0]);\n  };\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('image', file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      const {\n        data\n      } = await Axios.post('http://localhost:5000/api/v1/uploads', formData, config);\n      console.log('DATAAAA', data);\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.error(error);\n      setUploading(false);\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateProduct({\n      name,\n      image,\n      brand,\n      category,\n      description,\n      price,\n      in_stock,\n      product_id: productId\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n    to: \"/admin/productsList\",\n    className: \"btn btn-dark my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, \"Go Back\"), /*#__PURE__*/React.createElement(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, loadingProduct && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 28\n    }\n  }), loadingUpdate && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 27\n    }\n  }), errorProduct && /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 26\n    }\n  }, errorProduct), errorUpdate && /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, errorUpdate), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"Product Edit Screen\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"name\",\n    placeholder: \"Enter name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"brand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, \"Brand\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Brand\",\n    value: brand,\n    onChange: e => setBrand(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Category\",\n    value: category,\n    onChage: e => setCategory(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Description\",\n    value: description,\n    onChage: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    placeholder: \"Enter Price\",\n    value: price,\n    onChange: e => setPrice(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"in_stock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, \"In Stock\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    placeholder: \"Enter In Stock\",\n    value: in_stock,\n    onChange: e => setIn_stock(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, \"Image Path\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Image URL\",\n    value: image,\n    onChange: e => setImage(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.File, {\n    id: \"image-file\",\n    label: \"Choose File\",\n    custom: true,\n    onChange: uploadFileHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }), uploading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, \"Image Path\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Image URL\",\n    value: imageTest,\n    onChange: e => setImageTest(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.File, {\n    id: \"image-file\",\n    label: \"Choose File\",\n    custom: true,\n    onChange: testUploadFileHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"primary\",\n    className: \"btn btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }, \"Update\"))));\n};\n\nexport default ProductEditScreen;","map":{"version":3,"sources":["D:/Development/portfolio-projects/e-commerce-practice/frontend/src/components/screens/ProductEditScreen.jsx"],"names":["Axios","React","useState","useEffect","Form","Button","useDispatch","useSelector","Link","useHistory","useParams","ReactS3","listProductDetails","updateProduct","resetUpdateProduct","FormContainer","Loader","Message","configAWS","bucketName","dirName","region","accessKeyId","secretAccessKey","ProductEditScreen","history","dispatch","id","productId","name","setName","price","setPrice","image","setImage","imageTest","setImageTest","brand","setBrand","category","setCategory","in_stock","setIn_stock","description","setDescription","uploading","setUploading","productDetails","state","loading","loadingProduct","error","errorProduct","product","productUpdate","loadingUpdate","errorUpdate","success","successUpdate","updatedProduct","push","product_id","testUploadFileHandler","e","preventDefault","console","log","target","files","uploadFileHandler","file","formData","FormData","append","config","headers","data","post","submitHandler","value"],"mappings":"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","sourcesContent":["/* eslint-disable no-lonely-if */\r\n/* eslint-disable camelcase */\r\nimport Axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\n\r\nimport ReactS3 from 'react-s3';\r\n// import S3FileUpload from 'react-s3';\r\n\r\n// // Optional Import\r\n// import { uploadFile } from 'react-s3';\r\n\r\nimport {\r\n  listProductDetails,\r\n  updateProduct,\r\n  resetUpdateProduct,\r\n} from '../../actions/productActions';\r\nimport FormContainer from '../FormContainer';\r\nimport Loader from '../Loader';\r\nimport Message from '../Message';\r\n\r\nconst configAWS = {\r\n  bucketName: 'e-commerce-image-upload',\r\n  dirName: 'photos' /* optional */,\r\n  region: 'us-east-1',\r\n  accessKeyId: 'AKIA4MCEW3SI75T7QRVT',\r\n  secretAccessKey: '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',\r\n};\r\n\r\nconst ProductEditScreen = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { id: productId } = useParams();\r\n  const [name, setName] = useState('');\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState('');\r\n  const [imageTest, setImageTest] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [in_stock, setIn_stock] = useState(0);\r\n  const [description, setDescription] = useState('');\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const {\r\n    loading: loadingProduct,\r\n    error: errorProduct,\r\n    product,\r\n  } = productDetails;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n    product: updatedProduct,\r\n  } = productUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch(resetUpdateProduct());\r\n      history.push('/admin/productsList');\r\n    } else {\r\n      if (!product || product.product_id !== productId) {\r\n        dispatch(listProductDetails(productId));\r\n      } else {\r\n        setName(product.name);\r\n        setPrice(product.price);\r\n        setImage(product.image);\r\n        setBrand(product.brand);\r\n        setCategory(product.category);\r\n        setIn_stock(product.in_stock);\r\n        setDescription(product.description);\r\n      }\r\n    }\r\n  }, [dispatch, history, productId, product, successUpdate]);\r\n\r\n  const testUploadFileHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(e.target.files[0]);\r\n  };\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n    setUploading(true);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n      const { data } = await Axios.post(\r\n        'http://localhost:5000/api/v1/uploads',\r\n        formData,\r\n        config\r\n      );\r\n      console.log('DATAAAA', data);\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProduct({\r\n        name,\r\n        image,\r\n        brand,\r\n        category,\r\n        description,\r\n        price,\r\n        in_stock,\r\n        product_id: productId,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/productsList\" className=\"btn btn-dark my-3\">\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        {loadingProduct && <Loader />}\r\n        {loadingUpdate && <Loader />}\r\n        {errorProduct && <Message variant=\"danger\">{errorProduct}</Message>}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        <h1>Product Edit Screen</h1>\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"brand\">\r\n            <Form.Label>Brand</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Brand\"\r\n              value={brand}\r\n              onChange={(e) => setBrand(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"category\">\r\n            <Form.Label>Category</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Category\"\r\n              value={category}\r\n              onChage={(e) => setCategory(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"description\">\r\n            <Form.Label>Category</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Description\"\r\n              value={description}\r\n              onChage={(e) => setDescription(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"price\">\r\n            <Form.Label>Price</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Enter Price\"\r\n              value={price}\r\n              onChange={(e) => setPrice(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"in_stock\">\r\n            <Form.Label>In Stock</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Enter In Stock\"\r\n              value={in_stock}\r\n              onChange={(e) => setIn_stock(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"image\">\r\n            <Form.Label>Image Path</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Image URL\"\r\n              value={image}\r\n              onChange={(e) => setImage(e.target.value)}\r\n            />\r\n            <Form.File\r\n              id=\"image-file\"\r\n              label=\"Choose File\"\r\n              custom\r\n              onChange={uploadFileHandler}\r\n            />\r\n            {uploading && <Loader />}\r\n          </Form.Group>\r\n          <Form.Group controlId=\"image\">\r\n            <Form.Label>Image Path</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Image URL\"\r\n              value={imageTest}\r\n              onChange={(e) => setImageTest(e.target.value)}\r\n            />\r\n            <Form.File\r\n              id=\"image-file\"\r\n              label=\"Choose File\"\r\n              custom\r\n              onChange={testUploadFileHandler}\r\n            />\r\n          </Form.Group>\r\n          <Button type=\"submit\" variant=\"primary\" className=\"btn btn-block\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n"]},"metadata":{},"sourceType":"module"}