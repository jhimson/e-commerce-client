{"ast":null,"code":"/* eslint-disable camelcase */\nimport Axios from 'axios';\nimport { userConstants } from '../constants/userConstants';\n\nconst {\n  uuid\n} = require('uuidv4');\n\nconst {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_RESET,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REMOVE,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL\n} = userConstants;\nexport const login = (username, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await Axios.post('http://localhost:5000/api/v1/users/login', {\n      username,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.error.message ? error.response.data.error.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('orderDetailsList');\n  localStorage.removeItem('paymentMethod');\n  localStorage.removeItem('shippingAddress');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_REMOVE\n  });\n  dispatch({\n    type: USER_REGISTER_RESET\n  });\n};\nexport const register = (email, firstname, lastname, username, password) => async dispatch => {\n  const user_id = uuid();\n\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await Axios.post('http://localhost:5000/api/v1/users', {\n      user_id,\n      email,\n      firstname,\n      lastname,\n      username,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.error.message ? error.response.data.error.message : error.message\n    });\n  }\n};\nexport const getUserDetails = user_id => async (dispatch, getState) => {\n  const {\n    token\n  } = getState().userLogin.userInfo;\n\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const {\n      data\n    } = await Axios.get(`http://localhost:5000/api/v1/users/${user_id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userDetails', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.error.message ? error.response.data.error.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = (email, firstname, lastname, username, password) => async (dispatch, getState) => {\n  const {\n    token\n  } = getState().userLogin.userInfo;\n\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const {\n      data\n    } = await Axios.put(`http://localhost:5000/api/v1/users/profile`, {\n      email,\n      firstname,\n      lastname,\n      username,\n      password\n    }, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.error.message ? error.response.data.error.message : error.message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  const {\n    token\n  } = getState().userLogin.userInfo;\n\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const {\n      data\n    } = await Axios.get(`http://localhost:5000/api/v1/users`, config);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('usersList', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.response && error.response.data.error.message ? error.response.data.error.message : error.message\n    });\n  }\n};\nexport const deleteUser = user_id => async dispatch => {};","map":{"version":3,"sources":["D:/Development/portfolio-projects/e-commerce-practice/frontend/src/actions/userActions.js"],"names":["Axios","userConstants","uuid","require","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_RESET","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_REMOVE","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","login","username","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","email","firstname","lastname","user_id","getUserDetails","getState","token","userLogin","userInfo","Authorization","get","updateUserProfile","put","listUsers","deleteUser"],"mappings":"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","sourcesContent":["/* eslint-disable camelcase */\r\nimport Axios from 'axios';\r\n\r\nimport { userConstants } from '../constants/userConstants';\r\n\r\nconst { uuid } = require('uuidv4');\r\n\r\nconst {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_RESET,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REMOVE,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n} = userConstants;\r\n\r\nexport const login = (username, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await Axios.post(\r\n      'http://localhost:5000/api/v1/users/login',\r\n      { username, password },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.error.message\r\n          ? error.response.data.error.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo');\r\n  localStorage.removeItem('orderDetailsList');\r\n  localStorage.removeItem('paymentMethod');\r\n  localStorage.removeItem('shippingAddress');\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_DETAILS_REMOVE });\r\n  dispatch({ type: USER_REGISTER_RESET });\r\n};\r\n\r\nexport const register = (\r\n  email,\r\n  firstname,\r\n  lastname,\r\n  username,\r\n  password\r\n) => async (dispatch) => {\r\n  const user_id = uuid();\r\n  try {\r\n    dispatch({ type: USER_REGISTER_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await Axios.post(\r\n      'http://localhost:5000/api/v1/users',\r\n      { user_id, email, firstname, lastname, username, password },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.error.message\r\n          ? error.response.data.error.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (user_id) => async (dispatch, getState) => {\r\n  const { token } = getState().userLogin.userInfo;\r\n  try {\r\n    dispatch({ type: USER_DETAILS_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await Axios.get(\r\n      `http://localhost:5000/api/v1/users/${user_id}`,\r\n      config\r\n    );\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n    localStorage.setItem('userDetails', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.error.message\r\n          ? error.response.data.error.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (\r\n  email,\r\n  firstname,\r\n  lastname,\r\n  username,\r\n  password\r\n) => async (dispatch, getState) => {\r\n  const { token } = getState().userLogin.userInfo;\r\n  try {\r\n    dispatch({ type: USER_DETAILS_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await Axios.put(\r\n      `http://localhost:5000/api/v1/users/profile`,\r\n      { email, firstname, lastname, username, password },\r\n      config\r\n    );\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.error.message\r\n          ? error.response.data.error.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  const { token } = getState().userLogin.userInfo;\r\n\r\n  try {\r\n    dispatch({ type: USER_LIST_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await Axios.get(\r\n      `http://localhost:5000/api/v1/users`,\r\n      config\r\n    );\r\n\r\n    dispatch({ type: USER_LIST_SUCCESS, payload: data });\r\n    localStorage.setItem('usersList', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.error.message\r\n          ? error.response.data.error.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (user_id) => async (dispatch) => {};\r\n"]},"metadata":{},"sourceType":"module"}