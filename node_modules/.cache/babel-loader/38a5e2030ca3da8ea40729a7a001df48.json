{"ast":null,"code":"import _slicedToArray from\"D:\\\\Development\\\\A-portfolio-projects\\\\e-commerce-practice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";/* eslint-disable camelcase */import React,{useState,useEffect}from'react';import{useParams,useHistory}from'react-router-dom';import{Form,Button}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import{LinkContainer}from'react-router-bootstrap';import Message from'../Message';import Loader from'../Loader';import FormContainer from'../FormContainer';import{getUserToUpdate,updateUser,resetUserToUpdate}from'../../actions/userActions';import{userConstants}from'../../constants/userConstants';var USER_UPDATE_RESET=userConstants.USER_UPDATE_RESET;var UserEditScreen=function UserEditScreen(){var history=useHistory();var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.userUpdate.userToUpdate;}),fn=_useSelector.firstname,ln=_useSelector.lastname,un=_useSelector.username,em=_useSelector.email,is_admin=_useSelector.is_admin,loading=_useSelector.loading;var _useSelector2=useSelector(function(state){return state.updatedUser;}),success=_useSelector2.success,updateLoading=_useSelector2.loading;var _useParams=useParams(),user_id=_useParams.id;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),firstname=_useState4[0],setFirstname=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),lastname=_useState6[0],setLastname=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),username=_useState8[0],setUsername=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isAdmin=_useState10[0],setIsAdmin=_useState10[1];useEffect(function(){if(success){history.push('/admin/usersList');}if(!fn){dispatch(getUserToUpdate(user_id));}else{setFirstname(fn);setLastname(ln);setUsername(un);setEmail(em);setIsAdmin(is_admin);}},[dispatch,user_id,fn,ln,un,em,is_admin,success,history]);var submitHandler=function submitHandler(e){e.preventDefault();dispatch(updateUser({user_id:user_id,firstname:firstname,lastname:lastname,username:username,email:email,is_admin:isAdmin}));};return/*#__PURE__*/React.createElement(React.Fragment,null,success?/*#__PURE__*/React.createElement(Message,{variant:\"success\"},\"Successfully Updated\"):null,/*#__PURE__*/React.createElement(LinkContainer,{to:\"/admin/usersList\"},/*#__PURE__*/React.createElement(Button,{className:\"btn-sm\",onClick:function onClick(){dispatch({type:USER_UPDATE_RESET});dispatch(resetUserToUpdate());}},\"Go Back\")),updateLoading?/*#__PURE__*/React.createElement(Loader,null):null,loading?/*#__PURE__*/React.createElement(Loader,null):/*#__PURE__*/React.createElement(FormContainer,null,/*#__PURE__*/React.createElement(\"h1\",null,\"Update User Account\"),/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(Form.Group,{controlId:\"userId\"},/*#__PURE__*/React.createElement(Form.Label,null,\"User ID\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",value:user_id,disabled:true})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"firstname\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Firstname\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"Enter Firstname\",value:firstname,onChange:function onChange(e){return setFirstname(e.target.value);},required:true})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"lastname\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Lastname\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"Enter Lastname\",value:lastname,onChange:function onChange(e){return setLastname(e.target.value);},required:true})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"email\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Email\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"email\",placeholder:\"Enter Email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);},required:true})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"username\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Username\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"Enter Username\",value:username,onChange:function onChange(e){return setUsername(e.target.value);},required:true})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"username\"},/*#__PURE__*/React.createElement(Form.Check,{type:\"checkbox\",id:\"customControlAutosizing\",label:\"is Admin\",checked:isAdmin,onChange:function onChange(e){return setIsAdmin(e.target.checked);},custom:true})),/*#__PURE__*/React.createElement(Button,{type:\"submit\",variance:\"primary\",onClick:function onClick(e){return submitHandler(e);}},\"Update\"))));};export default UserEditScreen;","map":{"version":3,"sources":["D:/Development/A-portfolio-projects/e-commerce-practice/frontend/src/components/screens/UserEditScreen.jsx"],"names":["React","useState","useEffect","useParams","useHistory","Form","Button","useDispatch","useSelector","LinkContainer","Message","Loader","FormContainer","getUserToUpdate","updateUser","resetUserToUpdate","userConstants","USER_UPDATE_RESET","UserEditScreen","history","dispatch","state","userUpdate","userToUpdate","fn","firstname","ln","lastname","un","username","em","email","is_admin","loading","updatedUser","success","updateLoading","user_id","id","setEmail","setFirstname","setLastname","setUsername","isAdmin","setIsAdmin","push","submitHandler","e","preventDefault","type","target","value","checked"],"mappings":"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","sourcesContent":["/* eslint-disable camelcase */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport Message from '../Message';\r\nimport Loader from '../Loader';\r\nimport FormContainer from '../FormContainer';\r\nimport {\r\n  getUserToUpdate,\r\n  updateUser,\r\n  resetUserToUpdate,\r\n} from '../../actions/userActions';\r\n\r\nimport { userConstants } from '../../constants/userConstants';\r\n\r\nconst { USER_UPDATE_RESET } = userConstants;\r\n\r\nconst UserEditScreen = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const {\r\n    firstname: fn,\r\n    lastname: ln,\r\n    username: un,\r\n    email: em,\r\n    is_admin,\r\n    loading,\r\n  } = useSelector((state) => state.userUpdate.userToUpdate);\r\n\r\n  const { success, loading: updateLoading } = useSelector(\r\n    (state) => state.updatedUser\r\n  );\r\n\r\n  const { id: user_id } = useParams();\r\n  const [email, setEmail] = useState('');\r\n  const [firstname, setFirstname] = useState('');\r\n  const [lastname, setLastname] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push('/admin/usersList');\r\n    }\r\n    if (!fn) {\r\n      dispatch(getUserToUpdate(user_id));\r\n    } else {\r\n      setFirstname(fn);\r\n      setLastname(ln);\r\n      setUsername(un);\r\n      setEmail(em);\r\n      setIsAdmin(is_admin);\r\n    }\r\n  }, [dispatch, user_id, fn, ln, un, em, is_admin, success, history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateUser({\r\n        user_id,\r\n        firstname,\r\n        lastname,\r\n        username,\r\n        email,\r\n        is_admin: isAdmin,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {success ? (\r\n        <Message variant=\"success\">Successfully Updated</Message>\r\n      ) : null}\r\n      <LinkContainer to=\"/admin/usersList\">\r\n        <Button\r\n          className=\"btn-sm\"\r\n          onClick={() => {\r\n            dispatch({ type: USER_UPDATE_RESET });\r\n            dispatch(resetUserToUpdate());\r\n          }}\r\n        >\r\n          Go Back\r\n        </Button>\r\n      </LinkContainer>\r\n      {updateLoading ? <Loader /> : null}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <FormContainer>\r\n          <h1>Update User Account</h1>\r\n          <Form>\r\n            <Form.Group controlId=\"userId\">\r\n              <Form.Label>User ID</Form.Label>\r\n              <Form.Control type=\"text\" value={user_id} disabled />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"firstname\">\r\n              <Form.Label>Firstname</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Firstname\"\r\n                value={firstname}\r\n                onChange={(e) => setFirstname(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"lastname\">\r\n              <Form.Label>Lastname</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Lastname\"\r\n                value={lastname}\r\n                onChange={(e) => setLastname(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"username\">\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Username\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"username\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                id=\"customControlAutosizing\"\r\n                label=\"is Admin\"\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n                custom\r\n              />\r\n            </Form.Group>\r\n            <Button\r\n              type=\"submit\"\r\n              variance=\"primary\"\r\n              onClick={(e) => submitHandler(e)}\r\n            >\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        </FormContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default UserEditScreen;\r\n"]},"metadata":{},"sourceType":"module"}