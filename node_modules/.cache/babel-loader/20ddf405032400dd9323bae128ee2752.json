{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\portfolio-projects\\\\e-commerce-practice\\\\frontend\\\\src\\\\components\\\\screens\\\\ProductScreen.jsx\";\n\n/* eslint-disable no-nested-ternary */\nimport React, { useState, useEffect } from 'react';\nimport Moment from 'moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport { Button, Row, Col, Image, ListGroup, Form } from 'react-bootstrap';\nimport Rating from '../Rating';\nimport { listProductDetails } from '../../actions/productActions';\nimport { fetchReviews, createReview } from '../../actions/reviewActions';\nimport Loader from '../Loader';\nimport Message from '../Message';\n\nconst ProductScreen = () => {\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(1);\n  const [comment, setComment] = useState('');\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const {\n    product,\n    loading,\n    error\n  } = useSelector(state => state.productDetails);\n  const productReviews = useSelector(state => state.reviewsFetch);\n  const createdReview = useSelector(state => state.createReview);\n  const {\n    reviews,\n    error: errorReviews,\n    loading: loadingReviews\n  } = productReviews;\n  useEffect(() => {\n    dispatch(fetchReviews(id));\n\n    if (Object.keys(product).length === 0) {\n      dispatch(listProductDetails(id));\n    }\n  }, [dispatch, id, product]);\n\n  const addToCarThandler = () => {\n    console.log(id, qty);\n    history.push(`/cart/${id}?qty=${qty}`);\n    setTimeout(() => {\n      history.push('/');\n    }, 1000);\n  };\n\n  const reviewSubmitHandler = e => {\n    e.preventDefault();\n    dispatch(createReview({\n      product_id: id,\n      rating,\n      comment\n    }));\n    console.log({\n      rating,\n      comment\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => history.goBack(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Go Back\"), ' '), loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }) : error ? /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    msg: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: product.image,\n    alt: product.name,\n    thumbnail: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }\n  }, product.name)), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Rating, {\n    value: product.rating,\n    text: `${product.num_reviews} Reviews`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  }, \"Price:\", product.price)), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"Description: \", product.description))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, \"Price:\"), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, product.price))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, \"Status:\"), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, product.in_stock > 0 ? `In Stock` : `Out of Stock`))), product.in_stock > 0 && /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 23\n    }\n  }, \"Qty\"), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    value: qty,\n    onChange: e => setQty(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }, [...Array(product.in_stock).keys()].map(index => /*#__PURE__*/React.createElement(\"option\", {\n    key: index + 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }\n  }, index + 1)))))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-block\",\n    disabled: product.in_stock === 0,\n    onClick: () => addToCarThandler(id, qty),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }\n  }, \"Add to Cart\"))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, \"Reviews\"))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, reviews.map(review => /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, review.username), ' ', /*#__PURE__*/React.createElement(Rating, {\n    value: review.rating,\n    forReviews: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }, `${Moment(review.created_at).format('MM Do YYYY')} -  ${Moment(review.created_at).startOf('hour').fromNow()}`), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, review.comment))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 19\n    }\n  }, \"WRITE A CUSTOMER REVIEW\"), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }, \"Rating\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    value: rating,\n    onChange: e => setRating(Number(e.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 23\n    }\n  }, \"1 - Poor\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 23\n    }\n  }, \"2 - Fair\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 23\n    }\n  }, \"3 - Good\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 23\n    }\n  }, \"4 - Very Good\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 23\n    }\n  }, \"5 - Excellent\"))), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }, \"Comment\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"textarea\",\n    rows: 3,\n    value: comment,\n    onChange: e => setComment(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: reviewSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }\n  }, \"Submit\")))))));\n};\n\nexport default ProductScreen;","map":{"version":3,"sources":["D:/Development/portfolio-projects/e-commerce-practice/frontend/src/components/screens/ProductScreen.jsx"],"names":["React","useState","useEffect","Moment","useDispatch","useSelector","Link","useParams","useHistory","Button","Row","Col","Image","ListGroup","Form","Rating","listProductDetails","fetchReviews","createReview","Loader","Message","ProductScreen","qty","setQty","rating","setRating","comment","setComment","id","history","dispatch","product","loading","error","state","productDetails","productReviews","reviewsFetch","createdReview","reviews","errorReviews","loadingReviews","Object","keys","length","addToCarThandler","console","log","push","setTimeout","reviewSubmitHandler","e","preventDefault","product_id","goBack","image","name","num_reviews","price","description","in_stock","target","value","Array","map","index","review","username","created_at","format","startOf","fromNow","Number"],"mappings":"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","sourcesContent":["/* eslint-disable no-nested-ternary */\r\nimport React, { useState, useEffect } from 'react';\r\nimport Moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams, useHistory } from 'react-router-dom';\r\nimport { Button, Row, Col, Image, ListGroup, Form } from 'react-bootstrap';\r\nimport Rating from '../Rating';\r\nimport { listProductDetails } from '../../actions/productActions';\r\nimport { fetchReviews, createReview } from '../../actions/reviewActions';\r\nimport Loader from '../Loader';\r\nimport Message from '../Message';\r\n\r\nconst ProductScreen = () => {\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(1);\r\n  const [comment, setComment] = useState('');\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { product, loading, error } = useSelector(\r\n    (state) => state.productDetails\r\n  );\r\n  const productReviews = useSelector((state) => state.reviewsFetch);\r\n  const createdReview = useSelector((state) => state.createReview);\r\n\r\n  const {\r\n    reviews,\r\n    error: errorReviews,\r\n    loading: loadingReviews,\r\n  } = productReviews;\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchReviews(id));\r\n    if (Object.keys(product).length === 0) {\r\n      dispatch(listProductDetails(id));\r\n    }\r\n  }, [dispatch, id, product]);\r\n\r\n  const addToCarThandler = () => {\r\n    console.log(id, qty);\r\n    history.push(`/cart/${id}?qty=${qty}`);\r\n    setTimeout(() => {\r\n      history.push('/');\r\n    }, 1000);\r\n  };\r\n\r\n  const reviewSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createReview({ product_id: id, rating, comment }));\r\n    console.log({ rating, comment });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link>\r\n        <Button onClick={() => history.goBack()}>Go Back</Button>{' '}\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\" msg={error} />\r\n      ) : (\r\n        <>\r\n          <Row className=\"mt-5\">\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} thumbnail />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h2>{product.name}</h2>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.num_reviews} Reviews`}\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <h5>\r\n                    Price:\r\n                    {product.price}\r\n                  </h5>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col>\r\n              <ListGroup>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Price:</Col>\r\n                    <Col>{product.price}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Status:</Col>\r\n                    <Col>\r\n                      {product.in_stock > 0 ? `In Stock` : `Out of Stock`}\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                {product.in_stock > 0 && (\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Qty</Col>\r\n                      <Col>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={qty}\r\n                          onChange={(e) => setQty(e.target.value)}\r\n                        >\r\n                          {[...Array(product.in_stock).keys()].map((index) => (\r\n                            <option key={index + 1}>{index + 1}</option>\r\n                          ))}\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                )}\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    className=\"btn-block\"\r\n                    disabled={product.in_stock === 0}\r\n                    onClick={() => addToCarThandler(id, qty)}\r\n                  >\r\n                    Add to Cart\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={3}>\r\n              <h2>Reviews</h2>\r\n              {}\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <ListGroup variant=\"flush\">\r\n                {reviews.map((review) => (\r\n                  <ListGroup.Item>\r\n                    <pre>{review.username}</pre>{' '}\r\n                    <Rating value={review.rating} forReviews />\r\n                    <p>{`${Moment(review.created_at).format(\r\n                      'MM Do YYYY'\r\n                    )} -  ${Moment(review.created_at)\r\n                      .startOf('hour')\r\n                      .fromNow()}`}</p>\r\n                    <pre>{review.comment}</pre>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2>WRITE A CUSTOMER REVIEW</h2>\r\n                  <Form.Group>\r\n                    <Form.Label>Rating</Form.Label>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={rating}\r\n                      onChange={(e) => setRating(Number(e.target.value))}\r\n                    >\r\n                      <option value={1}>1 - Poor</option>\r\n                      <option value={2}>2 - Fair</option>\r\n                      <option value={3}>3 - Good</option>\r\n                      <option value={4}>4 - Very Good</option>\r\n                      <option value={5}>5 - Excellent</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"comment\">\r\n                    <Form.Label>Comment</Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={3}\r\n                      value={comment}\r\n                      onChange={(e) => setComment(e.target.value)}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n                  <Button onClick={reviewSubmitHandler}>Submit</Button>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n"]},"metadata":{},"sourceType":"module"}