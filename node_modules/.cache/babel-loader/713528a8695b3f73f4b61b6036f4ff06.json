{"ast":null,"code":"import _slicedToArray from\"D:\\\\Development\\\\A-portfolio-projects\\\\e-commerce-practice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useHistory}from'react-router-dom';import{Form,Button}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import FormContainer from'../FormContainer';import{saveShippingAddress}from'../../actions/cartActions';import CheckoutSteps from'../CheckoutSteps';var ShippingScreen=function ShippingScreen(){var _useSelector=useSelector(function(state){return state.cart;}),shippingAddress=_useSelector.shippingAddress;var dispatch=useDispatch();var history=useHistory();var _useState=useState(shippingAddress.address),_useState2=_slicedToArray(_useState,2),address=_useState2[0],setAddress=_useState2[1];var _useState3=useState(shippingAddress.city),_useState4=_slicedToArray(_useState3,2),city=_useState4[0],setCity=_useState4[1];var _useState5=useState(shippingAddress.postalCode),_useState6=_slicedToArray(_useState5,2),postalCode=_useState6[0],setPostalCode=_useState6[1];var _useState7=useState(shippingAddress.country),_useState8=_slicedToArray(_useState7,2),country=_useState8[0],setCountry=_useState8[1];var submitHandler=function submitHandler(e){e.preventDefault();dispatch(saveShippingAddress({address:address,city:city,postalCode:postalCode,country:country}));history.push('/payment');};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(CheckoutSteps,{step1:true,step2:true}),/*#__PURE__*/React.createElement(FormContainer,null,/*#__PURE__*/React.createElement(\"h1\",null,\"Shipping\"),/*#__PURE__*/React.createElement(Form,{onSubmit:submitHandler},/*#__PURE__*/React.createElement(Form.Group,{controlId:\"address\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Address\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"Enter Address\",value:address,onChange:function onChange(e){return setAddress(e.target.value);},required:true})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"city\"},/*#__PURE__*/React.createElement(Form.Label,null,\"City\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"Enter City\",value:city,onChange:function onChange(e){return setCity(e.target.value);},required:true})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"postalCode\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Postal Code\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"Enter Postal Code\",value:postalCode,onChange:function onChange(e){return setPostalCode(e.target.value);},required:true})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"country\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Country\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"Enter Country\",value:country,onChange:function onChange(e){return setCountry(e.target.value);},required:true})),/*#__PURE__*/React.createElement(Button,{type:\"submit\",variance:\"primary\"},\"Continue\"))));};export default ShippingScreen;","map":{"version":3,"sources":["D:/Development/A-portfolio-projects/e-commerce-practice/frontend/src/components/screens/ShippingScreen.jsx"],"names":["React","useState","useHistory","Form","Button","useDispatch","useSelector","FormContainer","saveShippingAddress","CheckoutSteps","ShippingScreen","state","cart","shippingAddress","dispatch","history","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","submitHandler","e","preventDefault","push","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../FormContainer';\r\nimport { saveShippingAddress } from '../../actions/cartActions';\r\nimport CheckoutSteps from '../CheckoutSteps';\r\n\r\nconst ShippingScreen = () => {\r\n  const { shippingAddress } = useSelector((state) => state.cart);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n    history.push('/payment');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2 />\r\n      <FormContainer>\r\n        <h1>Shipping</h1>\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"address\">\r\n            <Form.Label>Address</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Address\"\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"city\">\r\n            <Form.Label>City</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter City\"\r\n              value={city}\r\n              onChange={(e) => setCity(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"postalCode\">\r\n            <Form.Label>Postal Code</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Postal Code\"\r\n              value={postalCode}\r\n              onChange={(e) => setPostalCode(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"country\">\r\n            <Form.Label>Country</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Country\"\r\n              value={country}\r\n              onChange={(e) => setCountry(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Button type=\"submit\" variance=\"primary\">\r\n            Continue\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n};\r\nexport default ShippingScreen;\r\n"]},"metadata":{},"sourceType":"module"}