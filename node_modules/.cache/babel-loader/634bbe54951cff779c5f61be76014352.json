{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, deletedUserReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderFetchReducer, orderDetailsFetchReducer, orderedItemsFetchReducer, orderPayReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  usersList: userListReducer,\n  userDelete: deletedUserReducer,\n  orderCreate: orderCreateReducer,\n  orderFetch: orderFetchReducer,\n  orderDetails: orderDetailsFetchReducer,\n  orderedItems: orderedItemsFetchReducer,\n  orderPay: orderPayReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst paymentAddressFromStorage = localStorage.getItem('paymentMethod') ? JSON.parse(localStorage.getItem('paymentMethod')) : 'PayPal';\nconst orderDetailsFromStorage = localStorage.getItem('orderDetailsList') ? JSON.parse(localStorage.getItem('orderDetailsList')) : [];\nconst userDetailsFromStorage = localStorage.getItem('userDetails') ? JSON.parse(localStorage.getItem('userDetails')) : null;\nconst usersListFromStorage = localStorage.getItem('usersList') ? JSON.parse(localStorage.getItem('usersList')) : null;\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n    paymentMethod: paymentAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  },\n  orderDetails: {\n    orderDetailsList: orderDetailsFromStorage\n  },\n  userDetails: {\n    user: userDetailsFromStorage\n  },\n  usersList: {\n    users: usersListFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["D:/Development/portfolio-projects/e-commerce-practice/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","deletedUserReducer","orderCreateReducer","orderFetchReducer","orderDetailsFetchReducer","orderedItemsFetchReducer","orderPayReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","usersList","userDelete","orderCreate","orderFetch","orderDetails","orderedItems","orderPay","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","paymentAddressFromStorage","orderDetailsFromStorage","userDetailsFromStorage","usersListFromStorage","initialState","cartItems","shippingAddress","paymentMethod","userInfo","orderDetailsList","user","users","middleware","store"],"mappings":"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","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n} from './reducers/productReducers';\r\n\r\nimport { cartReducer } from './reducers/cartReducers';\r\n\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  deletedUserReducer,\r\n} from './reducers/userReducers';\r\n\r\nimport {\r\n  orderCreateReducer,\r\n  orderFetchReducer,\r\n  orderDetailsFetchReducer,\r\n  orderedItemsFetchReducer,\r\n  orderPayReducer,\r\n} from './reducers/orderReducers';\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  usersList: userListReducer,\r\n  userDelete: deletedUserReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderFetch: orderFetchReducer,\r\n  orderDetails: orderDetailsFetchReducer,\r\n  orderedItems: orderedItemsFetchReducer,\r\n  orderPay: orderPayReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {};\r\n\r\nconst paymentAddressFromStorage = localStorage.getItem('paymentMethod')\r\n  ? JSON.parse(localStorage.getItem('paymentMethod'))\r\n  : 'PayPal';\r\n\r\nconst orderDetailsFromStorage = localStorage.getItem('orderDetailsList')\r\n  ? JSON.parse(localStorage.getItem('orderDetailsList'))\r\n  : [];\r\n\r\nconst userDetailsFromStorage = localStorage.getItem('userDetails')\r\n  ? JSON.parse(localStorage.getItem('userDetails'))\r\n  : null;\r\n\r\nconst usersListFromStorage = localStorage.getItem('usersList')\r\n  ? JSON.parse(localStorage.getItem('usersList'))\r\n  : null;\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n    paymentMethod: paymentAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n  orderDetails: { orderDetailsList: orderDetailsFromStorage },\r\n  userDetails: { user: userDetailsFromStorage },\r\n  usersList: { users: usersListFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}