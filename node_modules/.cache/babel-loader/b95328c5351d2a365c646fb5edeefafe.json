{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\portfolio-projects\\\\e-commerce-practice\\\\frontend\\\\src\\\\components\\\\screens\\\\ProfileScreen.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FcCancel } from 'react-icons/fc';\nimport moment from 'moment';\nimport Message from '../Message';\nimport Loader from '../Loader';\nimport { getUserDetails, updateUserProfile } from '../../actions/userActions';\nimport { getOrdersByUserId, getOrdersByOrderId, getOrderedItemsByOrderId, getAllOrderedItemsByOrderId } from '../../actions/orderActions';\n\nconst ProfileScreen = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [firstname, setFirstname] = useState('');\n  const [lastname, setLastname] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const [variant, setVariant] = useState('danger');\n  const {\n    loading,\n    error,\n    user\n  } = useSelector(state => state.userDetails);\n  const userInfo = useSelector(state => state.userLogin.userInfo);\n  const {\n    orderItems\n  } = useSelector(state => state.orderFetch);\n  const orderDetails = useSelector(state => state.orderDetails);\n  let uniqueOrderId = [];\n  const orderListById = [];\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    }\n\n    if (user === null || Object.keys(user).length === 0) {\n      dispatch(getUserDetails('profile'));\n      dispatch(getOrdersByUserId(userInfo.user_id));\n    } else {\n      setFirstname(user.firstname);\n      setLastname(user.lastname);\n      setEmail(user.email);\n      setUsername(user.username);\n      dispatch(getOrdersByUserId(userInfo.user_id));\n    }\n\n    if (orderItems) {\n      orderItems.forEach(order => {\n        if (!uniqueOrderId.includes(order.order_id)) {\n          uniqueOrderId = [...uniqueOrderId, order.order_id];\n        }\n      });\n      uniqueOrderId.forEach(id => {\n        dispatch(getOrdersByOrderId(id));\n      });\n    }\n  }, [dispatch, history, userInfo, user]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setVariant('danger');\n      setMessage('Passwords do not match');\n    } else {\n      //* DISPATCH UPDATE PROFILE\n      dispatch(updateUserProfile(email, firstname, lastname, username, password));\n      setVariant('success');\n      setMessage('Profile Updated');\n      setPassword('');\n      setConfirmPassword('');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"User Profile\"), message && /*#__PURE__*/React.createElement(Message, {\n    variant: variant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, message), error && /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }, error), loading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"firstname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Firstname\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Firstname\",\n    value: firstname,\n    onChange: e => setFirstname(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"lastname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"Lastname\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Lastname\",\n    value: lastname,\n    onChange: e => setLastname(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Enter Email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Username\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Enter Password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"confimPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    value: confirmPassword,\n    onChange: e => setConfirmPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-block\",\n    type: \"submit\",\n    variance: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, \"Update\"))), /*#__PURE__*/React.createElement(Col, {\n    md: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, \"My Orders\"), /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    responsive: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, \"ORDER CODE\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }, \"total\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, \"Paid\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, \"Delivered\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }, \"information\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, orderDetails.loading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 38\n    }\n  }), orderDetails.orderDetailsList ? orderDetails.orderDetailsList.map(order => /*#__PURE__*/React.createElement(\"tr\", {\n    key: order.order_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 19\n    }\n  }, order.order_id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 19\n    }\n  }, moment(order.created_at).format('MMM Do YYYY, h:mm:ss A')), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 19\n    }\n  }, Number(order.subtotal)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }\n  }, order.paid_at === null ? /*#__PURE__*/React.createElement(FcCancel, {\n    size: \"2em\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 23\n    }\n  }) : moment(order.paid_at).format('MMM Do YYYY')), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }\n  }, order.delivered_at === null ? /*#__PURE__*/React.createElement(FcCancel, {\n    size: \"2em\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 23\n    }\n  }) : moment(order.delivered_at).format('MMM Do YYYY, h:mm:ss A')), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(LinkContainer, {\n    to: `/order/${order.order_id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-sm\",\n    type: \"submit\",\n    variant: \"dark\",\n    onClick: () => {\n      dispatch(getAllOrderedItemsByOrderId(order.order_id));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 23\n    }\n  }, \"details\"))))) : /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 15\n    }\n  }, \"No Orders found!\")))));\n};\n\nexport default ProfileScreen;","map":{"version":3,"sources":["D:/Development/portfolio-projects/e-commerce-practice/frontend/src/components/screens/ProfileScreen.jsx"],"names":["React","useState","useEffect","useHistory","Form","Button","Row","Col","Table","LinkContainer","useDispatch","useSelector","FcCancel","moment","Message","Loader","getUserDetails","updateUserProfile","getOrdersByUserId","getOrdersByOrderId","getOrderedItemsByOrderId","getAllOrderedItemsByOrderId","ProfileScreen","history","dispatch","email","setEmail","firstname","setFirstname","lastname","setLastname","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","variant","setVariant","loading","error","user","state","userDetails","userInfo","userLogin","orderItems","orderFetch","orderDetails","uniqueOrderId","orderListById","push","Object","keys","length","user_id","forEach","order","includes","order_id","id","submitHandler","e","preventDefault","target","value","orderDetailsList","map","created_at","format","Number","subtotal","paid_at","delivered_at"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { FcCancel } from 'react-icons/fc';\r\nimport moment from 'moment';\r\nimport Message from '../Message';\r\nimport Loader from '../Loader';\r\nimport { getUserDetails, updateUserProfile } from '../../actions/userActions';\r\nimport {\r\n  getOrdersByUserId,\r\n  getOrdersByOrderId,\r\n  getOrderedItemsByOrderId,\r\n  getAllOrderedItemsByOrderId,\r\n} from '../../actions/orderActions';\r\n\r\nconst ProfileScreen = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [firstname, setFirstname] = useState('');\r\n  const [lastname, setLastname] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n  const [variant, setVariant] = useState('danger');\r\n\r\n  const { loading, error, user } = useSelector((state) => state.userDetails);\r\n  const userInfo = useSelector((state) => state.userLogin.userInfo);\r\n  const { orderItems } = useSelector((state) => state.orderFetch);\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n\r\n  let uniqueOrderId = [];\r\n  const orderListById = [];\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    }\r\n    if (user === null || Object.keys(user).length === 0) {\r\n      dispatch(getUserDetails('profile'));\r\n      dispatch(getOrdersByUserId(userInfo.user_id));\r\n    } else {\r\n      setFirstname(user.firstname);\r\n      setLastname(user.lastname);\r\n      setEmail(user.email);\r\n      setUsername(user.username);\r\n      dispatch(getOrdersByUserId(userInfo.user_id));\r\n    }\r\n    if (orderItems) {\r\n      orderItems.forEach((order) => {\r\n        if (!uniqueOrderId.includes(order.order_id)) {\r\n          uniqueOrderId = [...uniqueOrderId, order.order_id];\r\n        }\r\n      });\r\n\r\n      uniqueOrderId.forEach((id) => {\r\n        dispatch(getOrdersByOrderId(id));\r\n      });\r\n    }\r\n  }, [dispatch, history, userInfo, user]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setVariant('danger');\r\n      setMessage('Passwords do not match');\r\n    } else {\r\n      //* DISPATCH UPDATE PROFILE\r\n      dispatch(\r\n        updateUserProfile(email, firstname, lastname, username, password)\r\n      );\r\n      setVariant('success');\r\n      setMessage('Profile Updated');\r\n      setPassword('');\r\n      setConfirmPassword('');\r\n    }\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant={variant}>{message}</Message>}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"firstname\">\r\n            <Form.Label>Firstname</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Firstname\"\r\n              value={firstname}\r\n              onChange={(e) => setFirstname(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"lastname\">\r\n            <Form.Label>Lastname</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Lastname\"\r\n              value={lastname}\r\n              onChange={(e) => setLastname(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"username\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Username\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"confimPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Button className=\"btn-block\" type=\"submit\" variance=\"primary\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        <Table striped bordered hover responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>ORDER CODE</th>\r\n              <th>Date</th>\r\n              <th>total</th>\r\n              <th>Paid</th>\r\n              <th>Delivered</th>\r\n              <th>information</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orderDetails.loading && <Loader />}\r\n            {orderDetails.orderDetailsList ? (\r\n              orderDetails.orderDetailsList.map((order) => (\r\n                <tr key={order.order_id}>\r\n                  <td>{order.order_id}</td>\r\n                  <td>\r\n                    {moment(order.created_at).format('MMM Do YYYY, h:mm:ss A')}\r\n                  </td>\r\n                  <td>{Number(order.subtotal)}</td>\r\n                  <td>\r\n                    {order.paid_at === null ? (\r\n                      <FcCancel size=\"2em\" />\r\n                    ) : (\r\n                      moment(order.paid_at).format('MMM Do YYYY')\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.delivered_at === null ? (\r\n                      <FcCancel size=\"2em\" />\r\n                    ) : (\r\n                      moment(order.delivered_at).format(\r\n                        'MMM Do YYYY, h:mm:ss A'\r\n                      )\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order.order_id}`}>\r\n                      <Button\r\n                        className=\"btn-sm\"\r\n                        type=\"submit\"\r\n                        variant=\"dark\"\r\n                        onClick={() => {\r\n                          dispatch(getAllOrderedItemsByOrderId(order.order_id));\r\n                        }}\r\n                      >\r\n                        details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <h2>No Orders found!</h2>\r\n            )}\r\n          </tbody>\r\n        </Table>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n"]},"metadata":{},"sourceType":"module"}